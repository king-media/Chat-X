# Set Node image as "base" alias Install PNPM and expose the path for the container.
FROM node:20-slim AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Start from the "base" image and have the resulting image stage alias be "build".
# Copy the entire project over to [container-root]/src/app. Then pnpm install & build
# Deploy workspace dependencies as an isolated package and store each workspace.
FROM base AS build
COPY ../ /usr/src/app
WORKDIR /usr/src/app
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm run -r build
RUN pnpm deploy --filter=@whatsapp/backend --prod /staging/backend
RUN pnpm deploy --filter=@whatsapp/frontend --prod /staging/frontend
RUN pnpm deploy --filter=@whatsapp/shared --prod /staging/shared

# Start from the "base" image and have the resulting image stage alias be "backend". 
# Set node env (process.env.PORT) copy the build/deploy over and run the serve script.
FROM base AS backend
ENV PORT=8000
COPY --from=build /staging/backend /staging/backend
WORKDIR /staging/backend
EXPOSE 8000
CMD [ "pnpm", "serve" ]


# Start from the "base" image and have the resulting image stage alias be "frontend". 
# Copy the build/deploy over and run the preview script.
FROM base AS frontend
COPY --from=build /staging/frontend /staging/frontend
# COPY ../package.json .
# COPY ../app/frontend/vite.config.ts /staging/frontend
WORKDIR /staging/frontend
EXPOSE 8001
CMD [ "pnpm", "preview" ]